#class {common_strategy} {kill};
#class {common_strategy} {open};

#NOP -- Set some variables for multi-round actions or toggles;
#var iprime_round 1;
#var subjugate_toggle 1;
#var botTickler 1;


#alias formatStrategy {
    #format result {<acf>-----<fff> %+15s  %s<088>} {%1} {%2};
    #showme $result;
};


#alias strategy-list {
    formatStrategy {Name} {Desc};
    #foreach $strategyList[%*] item {
        formatStrategy {$item[name]} {$item[description]};
    };
    #showme \n<bab>strategy<088> <bcc>name<088> to add or remove a strategy;
};

#alias strategy-clear {
    #list strategyActive clear;
    #if {"$draw[strategy][active]" == "on"} {draw_caption_strategy};
};

#alias strategy {
    #list {strategyList} {find} {%i%0} {tempListIndex};
    #var tempList $strategyList[+$tempListIndex];
    #if {&tempList[] > 0} {
        #NOP -- If the strategyActive list exists, check if the selected strategy is a member and toggle it;
        #NOP -- Otherwise, if there is no strategyActive list, we add it;
        #if {&strategyActive[] > 0} {
            #list strategyActive indexate name;
            #list {strategyActive} {find} {%i%0} {strategyExists};
            #if {$strategyExists} {
                #showme <caa>----  <fff> %0 is now an <baa>inactive<088> <fff>strategy <caa>  ----<088>;
                #list strategyActive filter {} {%i%0};
            } {
                #list strategyActive add {{{name} {$tempList[name]} {active} {1}}};
                #showme <caa>----  <fff> %0 is now an <bfd>active<088> <fff>strategy  <caa>  ----<088>;
            };
        } {
            #list strategyActive add {{{name} {$tempList[name]} {active} {1}}};
            #showme <caa>----  <fff> %0 is now an <bfd>active<088> <fff>strategy  <caa>  ----<088>;
        };
    } {
        #showme <caa>----  <fff> %0 not found in Strategy List.  <caa>  ----<088>;
        #showme <caa>----  <fff> 'strategy-list' will show a list of available strategies  <caa>  ----<088>;
    };
    #if {"$draw[strategy][active]" == "on"} {draw_caption_strategy};
};

#alias strategies {
    #showme {<ffb>   Active Strategies   <088>};
    #var inactiveStrats <ffb>   Inactive Strategies   <088>;
    #foreach $strategyActive[%*] item {
        #showme {<efe>   $item[name]   <088>};
    };
    #foreach $strategyList item {
        #var inactiveStrategies ${strategyList};
        #list inactiveStrategies indexate name;
        #foreach $strategyActive[%*] active {
            #list inactiveStrategies filter {} {$active[name]};
        };
    };
    #if {&inactiveStrategies[] > 0} {
        #showme {\n<ffb>   Inactive Strategies   <088>};
        #foreach $inactiveStrategies[%*] index {
            #if {"$index[guild]" == "all" || "$index[guild]" == "$guild"} {
                #showme {<cba>   $index[name]   <088>};
            };
        };
    };
    #showme \n<bab>strategy<088> <bcc>name<088> to add or remove a strategy;
    #showme <bab>strategy-list<088> to see available strategies;
};


#list strategyList clear;
#list strategyList add {{{guild} {all} {name} {lucanus} {active} {0} {description} {Automatically uses amulet and ring}}};
#list strategyList add {{{guild} {all} {name} {epowers} {active} {0} {description} {Automatically use fry, shred, ewell}}};
#list strategyList add {{{guild} {all} {name} {rolm}    {active} {0} {description} {Automatically use owl & raven runes}}};
#list strategyList add {{{guild} {all} {name} {rolm1}   {active} {0} {description} {ROLM Auto-Use Runes + Offhand Weapon}}};
#list strategyList add {{{guild} {all} {name} {bplate}  {active} {0} {description} {Blood Plate: Automatically feed}}};
#list strategyList add {{{guild} {all} {name} {tickler}  {active} {0} {description} {Bot: Leave mobs at 3%}}};
#list strategyList indexate name;

#alias checkStrategy {
    #if $debug[strategy] {#echo {<efc>RECEIVED %0<088>}};
    #var strategy_found 0;
    #if {&strategyActive[] > 0} {
        #foreach $strategyActive[%*] item {
            #if {"$item[name]" == "%1"} {
                #var strategy_found 1;
                #if $debug[strategy] {#echo {<efc>Strategy: %1   <fab>ACTION: %2<088>}};
                %2;
            };
        };
    };
    #NOP -- If there is a 3rd arguement, do this if the strategy isn't listed;
    #NOP -- This is useful for items like gemino preservations where you still want to do;
    #NOP -- a different action if the strategy isn't active;
    #if {!$strategy_found && "%3" !== ""} {
        #if $debug[strategy] {#echo {<efc>Strategy: %1   <fab>ACTION: %3<088>}};
        %3;
    };
};

#alias {_strategy_heartbeat} {
    #if {!$idle_flag} {
        #NOP -- juggernaut;
        #if {$mip[round] > 3 || $mip[round] == 0} {
            #var mech_toggle 0;
        };

        #if {$action_round < $mip[round]} {

            #NOP -- Mob Tickler/Leave them at 3%;
            #if {$bot[active] && $incombat} {
                checkStrategy {tickler} {
                    #if {$enemy[hp] < 4 && $botTickler} {
                        #var botTickler 0;
                        .botStep;
                        #delay 4 {#var botTickler 1};
                    };
                };
            };

            #NOP -- Actions to perform the first rounds of combat;
            #if {$mip[round] >= 1 && $mip[round] <= 3} {
                #if {"$guild" == "necromancer"} {_strategy_guild_start};
                #if {"$guild" == "fremen"} {_strategy_guild_start};
                #if {"$guild" == "juggernaut"} {_strategy_guild_start};
                #if {"$guild" == "bard"} {_strategy_guild_start};
                #if {"$guild" == "priest"} {_strategy_guild_start};
                #if {"$guild" == "monk"} {_strategy_guild_start};
                #if {"$guild" == "breed"} {_strategy_guild_start};
                #if {"$guild" == "changeling"} {_strategy_guild_start};
                #if {"$guild" == "mage"} {_strategy_guild_start};
                #if {"$guild" == "psicorps"} {_strategy_guild_start};
                #if {"$guild" == "elemental"} {_strategy_guild_start};
                #if {"$guild" == "jedi"} {_strategy_guild_start};
                #if {"$guild" == "cyborg"} {_strategy_guild_start};
                #if {"$guild" == "gentech"} {_strategy_guild_start};
                #if {"$guild" == "sii"} {_strategy_guild_start};
                #if {"$guild" == "angel"} {_strategy_guild_start};
                #if {"$guild" == "knight"} {_strategy_guild_start};
                #if {"$guild" == "bladesinger"} {_strategy_guild_start};
                #if {"$guild" == "adventurer"} {_strategy_guild_start};
            };

            #NOP -- Actions to perform only in the beginning of the fight;
            #if {$mip[round] > 2 && $mip[round] < 6} {
                #if {"${eternal}" != "" && "${my[eternal]}" != ""} {
                    checkStrategy {epowers} {
                        #if $eternal {
                            #if {$my[eternal][energy well]} {(energy well;#var mob[ewell] 1;#delay 180 {#var mob[ewell] 0};} {#if {${my[eternal][shred]} && !$mob[ewell]} {(shred;};};
                            #if {$my[eternal][fry]} {(fry;};
                        };
                    };
                };

                checkStrategy {lucanus} {
                    #if $lucanus_ring {push diamond};
                    #if $lucanus_amulet {push symbol};
                };

                #if {$rolm[owl]} {
                    checkStrategy {rolm} {touch owl rune};
                    checkStrategy {rolm1} {
                        unwield;
                        wield rod of lordly might;
                        touch owl rune;
                        #delay 610 {unwield;wield $rolm[offhand]};
                    };
                };
                #if {$rolm[raven] && $rolm[charges] > 50} {
                    checkStrategy {rolm} {touch raven rune};
                    checkStrategy {rolm1} {touch raven rune};
                };
                #if {$rolm[gremlin] && $rolm[charges] > 50} {
                    checkStrategy {rolm} {touch gremlin rune};
                    checkStrategy {rolm1} {touch gremlin rune};
                };
            };

            checkStrategy {bplate} {
                #class {eq_bloodplate} {size} {eq_bloodplate_loaded};
                #if $eq_bloodplate_loaded {#NOP} {#read ${cwd}/common/eq/bloodplate.tin};
            } {
                #class {eq_bloodplate} {size} {eq_bloodplate_loaded};
                #if $eq_bloodplate_loaded {#class eq_bloodplate kill;#var eq_bloodplate_loaded 0} {#NOP};
            };

            #NOP -- Actions to perform at any time in the fight;
            #if {"$guild" == "necromancer"} {_strategy_guild};
            #if {"$guild" == "fremen"} {_strategy_guild};
            #if {"$guild" == "juggernaut"} {_strategy_guild};
            #if {"$guild" == "bard"} {_strategy_guild};
            #if {"$guild" == "priest"} {_strategy_guild};
            #if {"$guild" == "monk"} {_strategy_guild};
            #if {"$guild" == "breed"} {_strategy_guild};
            #if {"$guild" == "changeling"} {_strategy_guild};
            #if {"$guild" == "mage"} {_strategy_guild};
            #if {"$guild" == "psicorps"} {_strategy_guild};
            #if {"$guild" == "elemental"} {_strategy_guild};
            #if {"$guild" == "jedi"} {_strategy_guild};
            #if {"$guild" == "cyborg"} {_strategy_guild};
            #if {"$guild" == "gentech"} {_strategy_guild};
            #if {"$guild" == "sii"} {_strategy_guild};
            #if {"$guild" == "angel"} {_strategy_guild};
            #if {"$guild" == "knight"} {_strategy_guild};
            #if {"$guild" == "bladesinger"} {_strategy_guild};
            #if {"$guild" == "adventurer"} {_strategy_guild}; 
        };
    };
};

#class {common_strategy} {close};