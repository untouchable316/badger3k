#class {guild_aliases} {kill};
#class {guild_aliases} {open};

#NOP -- donate water otherwise reclaim;
#alias {fremCorpse} {
    #if {$my[gp1][current] > $my[gp1][max] / 2} {
        #send !fai;
    }; #else {
        #send !reclaim;
    };
};

#NOP -- fill and donate literjons at shamoom;
#alias {donate_water} {
    acquire all;
    fill all;
    donate all
};

#NOP -- donate corpses to shimoom;
#alias {donate_water1} {
    #map get roomvnum donate_go_back;
    #if {"$area" == "Chaotic Sewers"} {#var sewer_winch 1} {#var sewer_winch 0};
    go fremen_shimoom;
    #line oneshot #action {The Wisdom Board containing %*} {
        #math tmpTotal {$corpses[total] - 1};
        unwrap all;
        deslab all;
        #if {$corpses[cooler] > 0} {
            #${corpses[cooler]} {uncooler corpse};
        };
        #action {eyes glow bright green upon the fallen} {
            #math tmpTotal {$tmpTotal + 1};
        } {1};
        #delay 4 {.calcLJDonate $tmpTotal;#unaction {eyes glow bright green upon the fallen}};
    } {1};
};

#alias {.calcLJDonate} {
    #local tmpWaterWorth 200;
    #local tmpMaxLJWater 0;
    #local tmpCorpseCycles 0;
    #math tmpMaxLJWater {$my[gp1][current] / 25 / $my[literjons][carrying]};
    donate all;
    #${tmpMaxLJWater} {fill all;donate all;};

    #if {"%0" == ""} {#NOP} {
        #format tmpNumber {%d} {%0};
        #math tmpCorpseCycles {$tmpNumber * $tmpWaterWorth / 25 / $my[literjons][carrying]};
        #loop 1 ${tmpCorpseCycles} tmpItem {
            #2 {reclaim;fill all;donate all;hp};
            #if {$tmpItem == $tmpCorpseCycles} {
                #NOP -- should be at least 1 corpse left on the ground to get water back;
                #3 reclaim;
                wrap all;
                go fremen_back;
                #line oneshot #action {A rocky plateau (w,board spacecraft)} {
                    #if {$sewer_winch} {go bank;deposit all;touch winch rune;#delay 10 {-sewers}} {#map run $donate_go_back};
                } {1};
            };
        };
    };
};

#NOP -- show skill trainers and count total skill points to figure out how many left until next glvl;
#alias {format_fremenskills} {
    #format {fremenskill_name} {<cff>%-20s <bea>%-8s <deb>%-11s <bad>%-10s <ffa>%-10s<088>} {%1} {%2} {%3} {%4} {%5};
    #echo {$fremenskill_name};
};

#unvar fremenskill;

#alias {fskills} {
    #read common/guilds/fremen/fremen_skills.tin;
    #var fremenskill[total][rank] 0;
    #var fremenskill[total][current] 0;
    #send {!skills -nograph};
    #delay .5 {
        #var fremenskill[total][current] {$fremenskill[total][rank]};
        #math fremenskill[glvl][current] {$fremenskill[total][current] / 6};
        #math fremenskill[total][next_glvl] {($fremenskill[glvl][current] + 1) * 6};
        #math fremenskill[total][remaining_til_glvl] {$fremenskill[total][next_glvl] - $fremenskill[total][current]};
        #echo {Total Skill Points: $fremenskill[total][rank] | Current GLVL: $fremenskill[glvl][current] | Next GLVL in $fremenskill[total][remaining_til_glvl] skill points};
        #class {fremen_skills} {kill};
    };
};

#class {guild_aliases} {close};