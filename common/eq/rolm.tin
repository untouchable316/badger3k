#class eq_rolm kill
#class eq_rolm open


#alias update_rolm_string {
    #var rolm_string <fff>ROLM (${rolm[charges]}):;
    #cat rolm_string { $rolm[type]};
    #if $rolm[owl] {
        #cat rolm_string {<bfa>O<088>}
    } {
        #cat rolm_string {<faa>O<088>}
    };
    #if $rolm[raven] {
        #cat rolm_string {<bfa>R<088>}
    } {
        #cat rolm_string {<faa>R<088>}
    };
    #if $rolm[cairn] {
        #cat rolm_string {<bfa>C<088>}
    } {
        #cat rolm_string {<faa>C<088>}
    };

#NOP    #if {$draw[index][rolm]} {     ;
#NOP        #NOP -- If the stored index is greater than those existing, reset it;     ;
#NOP        #if {$draw[index][rolm] > &caption_data[]} {     ;
#NOP            #math draw[index][rolm] {&caption_data[] + 1};     ;
#NOP            #list caption_data insert $draw[index][rolm] {};     ;
#NOP        };     ;
#NOP    } {     ;
#NOP        #math draw[index][rolm] {&caption_data[] + 1};     ;
#NOP        #list caption_data insert $draw[index][rolm] {};     ;
#NOP    };     ;
#NOP     ;
#NOP    #list caption_data set $draw[index][rolm] $rolm_string;     ;
};

#NOP -- Rolm shortcuts;

#NOP -- set anchor point and winch back with map correction;
#action {A small golden strand falls from the relic and imbeds itself into the ground.} {
    #var rolm[anchor_point] $roomvnum;
} {2};

#action {A magical golden strand slithers into the room.  It gently encircles you} {
    #map goto $rolm[anchor_point];
} {2};

#alias {setport} {
    touch anchor rune;
};

#alias {port} {
    touch winch rune;
};

#NOP -- Easier weapon type or dmg switching;
#alias {rolm} {
    #switch {"%0"} {
        #case {"fire"} {
            touch dragon rune;
        };
        #case {"edged"} {
            touch reaper rune;
        };
        #case {"crushing"} {
            touch star rune;
        };
        #case {"ice"} {
            touch frost rune;
        };
        #case {"acid"} {
            touch arachne rune;
        };
        #case {"mind"} {
            touch crown rune;
        };
        #case {"energy"} {
            touch comet rune;
        };
        #case {"poison"} {
            touch viper rune;
        };
        #case {"radiation"} {
            touch aurora rune;
        };
        #case {"electric"} {
            touch lightning rune;
        };
        #case {"sword"} {
            touch dragon rune;
        };
        #case {"polearm"} {
            touch reaper rune;
        };
        #case {"axe"} {
            touch frost rune;
        };
        #case {"gun"} {
            touch arachne rune;
        };
        #case {"mace"} {
            touch crown rune;
        };
        #case {"flail"} {
            touch comet rune;
        };
        #case {"dagger"} {
            touch viper rune;
        };
        #case {"exotic"} {
            touch aurora rune;
        };
        #case {"lance"} {
            touch lightning rune;
        };
    };
};

#NOP -- dove rune (room peace);
#alias {dove} {
    touch dove rune
};

#NOP -- Message for ROLM Reset/Initiation:
#action {Divine energy dances up and down the artifact, welling with power renewed.} {
    #var rolm[t1_reset] $rolm[last_reset];
    #format rolm[last_reset] {%T};
    #math rolm[reset_duration] { 1.0 * $rolm[last_reset] - $rolm[t1_reset] / 60};
    #echo {ROLM RESET AFTER $rolm[reset] MINUTES};
} {2};

#action {Upon the %* the %* glows brightly again.} {
    #var tmpWord %2;
    #regex {$tmpWord} {owl} {#var rolm[owl] 1;#undelay rolm_owl;};
    #regex {$tmpWord} {raven} {#var rolm[raven] 1;#undelay rolm_raven};
    #regex {$tmpWord} {cairn} {#var rolm[cairn] 1;#format cairn_end {%T};#math cd_cairn {$cairn_end - $cairn_start};#echo {COOLDOWN CAIRN: $cd_cairn}};
    #regex {$tmpWord} {gremlin} {#var rolm[gremlin] 1;#undelay rolm_gremlin};
} {2};

#action {You wield DragonBlade.} {#var rolm[type] Sword/Fire;update_rolm_string} {2};
#action {You wield PsiMace.} {#var rolm[type] Mace/Mind;update_rolm_string} {2};
#action {You wield AcidSlinger.} {#var rolm[type] Gun/Acid;update_rolm_string} {2};
#action {You wield VenomClaw.} {#var rolm[type] Dagger/Poison;update_rolm_string} {2};
#action {You wield PhotonSphere.} {#var rolm[type] Exotic/Radiation;update_rolm_string} {2};
#action {You wield HolyScythe.} {#var rolm[type] Polearm/Edged;update_rolm_string} {2};
#action {You wield Rod of Lordly Might.} {#var rolm[type] Mace/Blunt;update_rolm_string} {2};
#action {You wield GlacialAxe.} {#var rolm[type] Axe/Ice;update_rolm_string} {2};
#action {You wield ArcLance.} {#var rolm[type] Lance/Electric;update_rolm_string} {2};
#action {You wield SolarFlail.} {#var rolm[type] Mace/Energy;update_rolm_string} {2};

#NOP -- Update charges on use and set tickers in case the "glows brightly" pattern doesn't match;
#NOP -- Tickers are padded with about 10 seconds;
#action {You touch the Owl rune on the artifact and hear a soft *click*} {
    #var rolm[owl] 0;
    #line oneshot #action {The owl rune flashes briefly on the artifact.} {
        #math rolm[charges] {$rolm[charges] - 1};
        #delay rolm_owl {#var rolm[owl] 1;#var rolm[owl_active] 0} 3610;
        #var rolm[owl_active] 1;
    } {1};
};
#action {You touch the Raven rune on the artifact and hear a soft *click*} {
    #var rolm[raven] 0;
    #line oneshot #action {The diamond rune flashes briefly on the artifact.} {
        #math rolm[charges] {$rolm[charges] - 1};
        #delay rolm_raven {#var rolm[raven] 1} 310;
    } {1};
} {2};
#action {You touch the Cairn rune on the artifact and hear a soft *click*} {
    #var rolm[cairn] 0;
    #line oneshot #action {The diamond rune flashes briefly on the artifact.} {
        #math rolm[charges] {$rolm[charges] - 1};
        #delay rolm_cairn {#var rolm[cairn] 1} 300;
    } {1};
    #format cairn_start {%T}
} {2};
#action {You touch the Gremlin rune on the artifact and hear a soft *click*} {
    #var rolm[gremlin] 0;
    #line oneshot #action {The diamond rune flashes briefly on the artifact.} {
        #math rolm[charges] {$rolm[charges] - 1};
        #delay rolm_gremlin {#var rolm[gremlin] 1} 1280;
    } {1};
} {2};

#NOP Charge math;
#action {^The %w rune flashes thrice briefly on the artifact.} {#math rolm[charges] {$rolm[charges] - 3};update_rolm_string} {2};
#action {^The %w rune flashes twice briefly on the artifact.} {#math rolm[charges] {$rolm[charges] - 2};update_rolm_string} {2};
#action {^The %w rune flashes briefly on the artifact.} {#math rolm[charges] {$rolm[charges] - 1};update_rolm_string} {2};

#action {Beneath you, the earth begins to shudder and crack apart, exposing a} {
#NOP    The dark soil quietly births a fresh corpse through its cold surface.;
#NOP    ...followed quickly by a second, ripe carcass that rises up.;
#nop    ...and yet finally a third.;
} {2};


#action {Warming in your grasp, %* twinkling points of} {#var rolm[charges] @word_to_number{%1}};

#NOP -- use this to store a var when ROLM will reset;
#NOP Your fate is now sealed to the mighty artifact!;

#action {^The light fades and you materialize elsewhere....} {rating} {2};

#NOP -- Flip to crown/psimace upon first wielding, check charges, and brief;
#action {The grace of an ancient god courses through you.} {touch diamond rune;examine runes} {2};

#action {The sun rune sparks as it flips over, its face changing to that of the moon.} {#var rolm[sun] 1} {2};
#action {The moon rune flashes as it flips over, its face changing to that of the sun.} {#var rolm[sun] 0} {2};

#action {The ashes rune flashes with life as it flips over to the phoenix rune.} {#var rolm[hp_regen] 0;#var rolm[sp_regen] 1} {2}:
#action {The phoenix rune bursts into flames as it flips over to the ashes rune.} {#var rolm[hp_regen] 1;#var rolm[sp_regen] 0} {2};


#NOP -- This automatically checks which runes are active or not;
#alias .checkRolmAnsi {
    #var tmpAnsi %1;
    #var tmpRune %2;
    #if {"$tmpAnsi" == "\e[36;1m" || "$tmpAnsi" == "\e[0m\e[36;1m"} {#var rolm[$tmpRune] 1} {#var rolm[$tmpRune] 0};
};

#alias .callCaptureRolm {
    #class {rolmCapture} {open};
    #event {PROCESSED LINE}{
        #format tmpLine {%p} {%%0};
        #regex {$tmpLine} {%cstar} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {star}} {#NOP};
        #regex {$tmpLine} {%cdragon} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {dragon}} {#NOP};
        #regex {$tmpLine} {%cfrost} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {frost}} {#NOP};
        #regex {$tmpLine} {%clightning} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {lightning}} {#NOP};
        #regex {$tmpLine} {%ccomet} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {comet}} {#NOP};
        #regex {$tmpLine} {%caurora} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {aurora}} {#NOP};
        #regex {$tmpLine} {%cviper} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {viper}} {#NOP};
        #regex {$tmpLine} {%carachne} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {arachne}} {#NOP};
        #regex {$tmpLine} {%creaper} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {reaper}} {#NOP};
        #regex {$tmpLine} {%ccrown} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {crown}} {#NOP};
        #regex {$tmpLine} {%csun} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {sun}} {#NOP};
        #regex {$tmpLine} {%cashes} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {ashes}} {#NOP};
        #regex {$tmpLine} {%cangel} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {angel}} {#NOP};
        #regex {$tmpLine} {%cdiamond} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {diamond}} {#NOP};
        #regex {$tmpLine} {%cheart} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {heart}} {#NOP};
        #regex {$tmpLine} {%cspark} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {spark}} {#NOP};
        #regex {$tmpLine} {%cscroll} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {scroll}} {#NOP};
        #regex {$tmpLine} {%canchor} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {anchor}} {#NOP};
        #regex {$tmpLine} {%cwinch} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {winch}} {#NOP};
        #regex {$tmpLine} {%ceye} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {eye}} {#NOP};
        #regex {$tmpLine} {%classo} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {lasso}} {#NOP};
        #regex {$tmpLine} {%cdove} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {dove}} {#NOP};
        #regex {$tmpLine} {%cskull} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {skull}} {#NOP};
        #regex {$tmpLine} {%cghost} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {ghost}} {#NOP};
        #regex {$tmpLine} {%ceagle} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {eagle}} {#NOP};
        #regex {$tmpLine} {%cowl} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {owl}} {#NOP};
        #regex {$tmpLine} {%cscales} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {scales}} {#NOP};
        #regex {$tmpLine} {%craven} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {raven}} {#NOP};
        #regex {$tmpLine} {%cgremlin} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {gremlin}} {#NOP};
        #regex {$tmpLine} {%ccairn} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {cairn}} {#NOP};
        #regex {$tmpLine} {%carmillary} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {armillary}} {#NOP};
        #regex {$tmpLine} {%caegis} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {aegis}} {#NOP};
        #regex {$tmpLine} {%correry} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {orrery}} {#NOP};
        #regex {$tmpLine} {%cinfinity} {#var tmpAnsi {&1};.checkRolmAnsi {$tmpAnsi} {infinity};#unevent {PROCESSED LINE};#class rolmCapture kill} {#NOP};
    };
    #class {rolmCapture} {close};
};


#action {^There are many intricate runes marvelously inlaid with} {
    .callCaptureRolm;
    #delay 2 {#class rolmCapture kill};
} {2};

#class eq_rolm close